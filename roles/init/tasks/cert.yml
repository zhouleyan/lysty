---
#--------------------------------------------------------------#
# Create CA Dir                                         [ca_dir]
#--------------------------------------------------------------#
# This is created by default on all EL releases
- name: create ca directory on local files/pki/ca
  tags: ca_dir
  become: no
  connection: local
  file: path={{ item }} state=directory mode=0755
  with_items:
    - files/pki
    - files/pki/ca
    - files/pki/csr

#--------------------------------------------------------------#
# Create or Reuse CA Private Key                    [ca_private]
#--------------------------------------------------------------#
# make sure ca private key exists, or abort
- name: create ca private key
  tags: ca_private
  become: no
  connection: local
  block:

    # check ca private key file exists @ files/pki/ca.key
    - name: check files/pki/ca/ca.key exists
      stat: path=files/pki/ca/ca.key
      register: ca_key_exists

    # abort becomes user does not provide their ca key & certs
    - name: ABORT if ca key not exists
      when: not ca_key_exists.stat.exists|bool and not ca_create|bool
      any_errors_fatal: true
      ignore_errors: false
      fail:
        msg: 'Abort because `ca_create` is set to false, but local ca key cert not exists.'

    # generate ca private key on /etc/pki/ when ca_create is true
    - name: generate ca private key
      when: not ca_key_exists.stat.exists|bool and ca_create|bool
      openssl_privatekey: path=files/pki/ca/ca.key mode=0600

#--------------------------------------------------------------#
# Issue CA Cert                                        [ca_cert]
#--------------------------------------------------------------#
# self-signing a ca cert if not exists
- name: self-signing ca cert
  tags: ca_cert
  become: no
  connection: local
  block:

    # check ca public cert file exists @ files/pki/ca.crt
    - name: check files/pki/ca/ca.crt exists
      stat: path=files/pki/ca/ca.crt
      register: ca_crt_exists

    # generate ca self-signing request
    - name: generate ca signing request
      when: not ca_crt_exists.stat.exists|bool
      openssl_csr:
        path: files/pki/csr/ca.csr
        privatekey_path: files/pki/ca/ca.key
        common_name: lysty-ca
        organization_name: lysty
        organizational_unit_name: ca
        basic_constraints:
          - CA:TRUE
          - pathlen:1
        basic_constraints_critical: yes
        key_usage: [ keyCertSign, cRLSign, digitalSignature ]
        #force: true
        #key_usage_critical: true
        #use_common_name_for_san: false

    # approve csr and get self-signed ca cert
    - name: generate self-signed ca.crt
      when: not ca_crt_exists.stat.exists|bool
      openssl_certificate:
        path: files/pki/ca/ca.crt
        csr_path: files/pki/csr/ca.csr
        privatekey_path: files/pki/ca/ca.key
        provider: selfsigned
        selfsigned_not_after: +36500d
        mode: 0644

#--------------------------------------------------------------#
# add & trust ca cert to all nodes                     [node_ca]
#--------------------------------------------------------------#
# files/pki/ca/ca.crt should exist, which is generated role `CA`
- name: node add and trust ca cert
  tags: node_ca
  block:

    # make /etc/pki cert dir
    - name: create node pki dir
      file: path=/etc/pki state=directory

    # rhel: /etc/pki , debian: /etc/ssl/certs
    - name: add ca.crt to node
      copy:
        src: files/pki/ca/ca.crt
        dest: /etc/pki/ca.crt
        owner: root
        group: root
        mode: 0644

    # rhel: /etc/pki/ca-trust/source/anchors/ca.crt
    # debian: /usr/local/share/ca-certificates/ca.crt
    - name: trust ca.crt on node
      shell: |
        {% if os_package|default('rpm') == 'deb' %}
        # debian
        rm -rf /usr/local/share/ca-certificates/ca.crt
        ln -s /etc/pki/ca.crt /usr/local/share/ca-certificates/ca.crt
        /usr/sbin/update-ca-certificates
        {% else %}
        # rhel
        rm -rf /etc/pki/ca-trust/source/anchors/ca.crt
        ln -s /etc/pki/ca.crt /etc/pki/ca-trust/source/anchors/ca.crt
        /bin/update-ca-trust
        {% endif %}
      args: { executable: /bin/bash }
...
