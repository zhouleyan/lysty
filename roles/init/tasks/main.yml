#--------------------------------------------------------------#
# 1. Name                                            [node_name]
#--------------------------------------------------------------#
- name: Node identity
  tags: [ always, node_id ]
  block:

    - name: Get node fact
      become: no
      shell: |
        . /etc/os-release > /dev/null
        OS_MAJOR_VERSION="${VERSION_ID}"
        echo ${ID}
        if [[ $VERSION_ID == *.* ]]; then
            OS_MAJOR_VERSION=$(echo "${VERSION_ID}" | cut -d. -f1) 
        fi
        echo ${VERSION_ID}
        echo ${OS_MAJOR_VERSION}
        if command -v dpkg >/dev/null 2>&1; then
            echo ${VERSION_CODENAME}
        else
            echo el${OS_MAJOR_VERSION}
        fi
        echo $(uname -m);
        if command -v dpkg >/dev/null 2>&1; then
            echo "deb"
        else
            echo "rpm"
        fi
        echo $(whoami);
        echo $(hostname);
        echo $(grep -c '^processor' /proc/cpuinfo);
        echo $(getconf _PHYS_PAGES);
        echo $(getconf PAGE_SIZE);
        /bin/true;
      register: node_result
      args: { executable: /bin/bash }
  
    - name: Set node fact
      become: no
      connection: local
      set_fact:
        os_vendor:       "{{ node_result.stdout_lines[0] }}"
        os_version_full: "{{ node_result.stdout_lines[1] }}"
        os_version:      "{{ node_result.stdout_lines[2]|int }}"
        os_codename:     "{{ node_result.stdout_lines[3] }}"
        os_arch:         "{{ node_result.stdout_lines[4] }}"
        os_package:      "{{ node_result.stdout_lines[5] }}"
        node_user:       "{{ node_result.stdout_lines[6] }}"
        node_hostname:   "{{ node_result.stdout_lines[7] }}"
        node_cpu:        "{{ node_result.stdout_lines[8]|int }}"
        node_pages:      "{{ node_result.stdout_lines[9]|int }}"
        node_page_size:  "{{ node_result.stdout_lines[10]|int }}"

    - name: Fill empty nodename with hostname
      when: nodename is not defined or nodename == ''
      connection: local
      set_fact: { nodename: "{{ node_hostname }}" }

    - name: Build node identity
      connection: local
      set_fact:
        nodename:        "{% if nodename_overwrite|bool and inventory_hostname is defined and inventory_hostname != '' %}{{ inventory_hostname }}{% else %}{{ nodename|default(omit) }}{% endif %}"
        node_cluster:    "{{ node_cluster|default('nodes') }}"
        node_os_code:    "{% if os_package == 'rpm' %}el{{ os_version }}{% elif os_package == 'deb' %}{{ os_vendor[0] }}{{ os_version }}{% endif %}"  # el7, el8, el9, u20, u22, u24, d12
        node_os_code_fb: "{% if os_package == 'rpm' %}el9{% elif os_package == 'deb' %}{% if os_vendor == 'ubuntu' %}u22{% else %}d12{% endif %}{% endif %}"  # fallback to el9, u22, d12
        node_mem_bytes:  "{{ node_pages|int * node_page_size|int }}"
        node_mem_mb:     "{{ (node_pages|int * node_page_size|int / 1048576) | round(0, 'ceil')|int }}"
        node_mem_gb:     "{{ [ (node_pages|int * node_page_size|int / 1073741824) | round(0, 'ceil')|int , 1 ] | max }}"
    
    # nodename, cluster, spec, os and modules
    - name: Print node identity
      connection: local
      debug:
        msg: >-
          nodename: {{ nodename }},
          node_cluster: {{ node_cluster }},
          spec: c{{ node_cpu }}m{{ node_mem_gb }}, os: {{ os_vendor }}.{{ os_version }}.{{ os_arch }} {{ node_os_code }}:{{ os_package }}

    - name: Set hostname to nodename
      tags: node_name
      become: yes
      when: nodename_overwrite|bool and nodename is defined and nodename != '' and node_hostname != nodename
      block:
        - name: Add new hostname to /etc/hosts (IPv4)
          lineinfile:
            path: /etc/hosts
            regexp: ^127\.0\.0\.1.*{{ nodename }}
            line: "127.0.0.1     {{ nodename }} localhost localhost.localdomain"
            state: present
            insertafter: ^127\.0\.0\.1.*localhost
        - name: Change the hostname
          command: hostnamectl set-hostname {{ nodename }}
        - name: Remove the old hostname in /etc/hosts (IPv4)
          lineinfile:
            path: /etc/hosts
            regexp: ^127\.0\.0\.1.*{{ node_hostname }}(?!.*{{ nodename }})
            state: absent
        - name: Print the result
          debug:
            msg: "Hostname updated to {{ nodename }}. Reboot recommended to fully apply changes."

#--------------------------------------------------------------#
# 2. Hosts & Resolv
#--------------------------------------------------------------#
# node_hosts , node_resolv
- import_tasks: dns.yml

#--------------------------------------------------------------#
# 3. Firewall
#--------------------------------------------------------------#
- import_tasks: firewall.yml

#--------------------------------------------------------------#
# 4. Cert
#--------------------------------------------------------------#
- import_tasks: cert.yml

#--------------------------------------------------------------#
# 5. TUNE
#--------------------------------------------------------------#
- import_tasks: tune.yml

#--------------------------------------------------------------#
# 6. ADMIN
#--------------------------------------------------------------#
- import_tasks: admin.yml
